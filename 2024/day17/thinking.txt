Register A: 47719761
Register B: 0
Register C: 0

Program: 2,4, 1,5, 7,5, 0,3, 4,1, 1,6, 5,5, 3,0

equivalent to
while A != 0:
    B = A % 8
    B = B ^ 5
    C = A // 2 ** B
    A = A // 8
    B = B ^ C
    B = B ^ 6
    print(B % 8)

we want to somehow reverse the process (we know B % 8 at each step)
basically, A = A * 8 + B, when B = A % 8
so we can start at A = 0 and produce each next A, if we can restore B = A % 8 from final B % 8

important note: B and C at each iteration are fully defined by A at that iteration, local variables
so we basically can go over all values 0, 1, ..., 7 for B, restore A based on it, and then check will iteration produce the same B % 8
